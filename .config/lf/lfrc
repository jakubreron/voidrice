#!/bin/sh

# set ratios 1:2:3
set ratios 1:2
set previewer ~/.config/lf/preview
set cleaner ~/.config/lf/cleaner

# Luke's lf settings

# Basic vars
set shell zsh
set shellopts '-euy'
set ifs "\n"
set scrolloff 10
set icons
set period 1
set hiddenfiles ".*:*.aux:*.log:*.bbl:*.bcf:*.blg:*.run.xml"
set hidden
set drawbox
set ignorecase true
set info

# Vars that depend on environmental variables
# $lf -remote "send $id set previewer ${XDG_CONFIG_HOME:-$HOME/.config}/lf/scope"

# cmds/functions
cmd on-cd &{{
    # display git repository status in your prompt
    source /usr/share/git/completion/git-prompt.sh
    GIT_PS1_SHOWDIRTYSTATE=auto
    GIT_PS1_SHOWSTASHSTATE=auto
    GIT_PS1_SHOWUNTRACKEDFILES=auto
    GIT_PS1_SHOWUPSTREAM=auto
    GIT_PS1_COMPRESSSPARSESTATE=auto
    git=$(__git_ps1 " [GIT BRANCH:> %s]") || true
    fmt="\033[32;1m%u@%h\033[0m:\033[34;1m%w\033[0m\033[33;1m$git\033[0m"
    lf -remote "send $id set promptfmt \"$fmt\""
}}

cmd open ${{
    case $(file --mime-type "$(readlink -f $f)" -b) in
	image/vnd.djvu|application/pdf|application/octet-stream|application/postscript) setsid -f zathura $fx >/dev/null 2>&1 ;;
        text/*) $EDITOR $fx;;
	image/x-xcf) setsid -f gimp $f >/dev/null 2>&1 ;;
	image/svg+xml) display -- $f ;;
	image/*) rotdir $f | grep -i "\.\(png\|jpg\|jpeg\|gif\|webp\|tif\|ico\)\(_large\)*$" | setsid -f sxiv -aio 2>/dev/null | lf-select & ;;
	audio/*) mpv --audio-display=no $f ;;
	video/*) setsid -f mpv $f -quiet >/dev/null 2>&1 ;;
	application/pdf|application/epub*) setsid -f zathura $fx >/dev/null 2>&1 ;;
	application/vnd*) setsid -f libreoffice $fx >/dev/null 2>&1 ;; # NOTE: office formats
	application/pgp-encrypted) $EDITOR $fx ;;
        *) for f in $fx; do setsid -f $OPENER $f >/dev/null 2>&1; done;;
    esac
}}

cmd fzf_jump $lf -remote "send $id cd $(awk '{ gsub(/#.*/, ""); } !/^$/ { print $2 }' ${XDG_CONFIG_HOME:-$HOME/.config}/shell/bm-dirs | fzf | sed "s/\${.*-// ; s/}//" | envsubst)"

cmd delete ${{
	clear; tput cup $(($(tput lines)/3)); tput bold
	set -f
	printf "%s\n\t" "$fx"
	printf "delete?[y/N]"
	read ans
	[ $ans = "y" ] && rm -rf -- $fx
}}

cmd extract ${{
	clear; tput cup $(($(tput lines)/3)); tput bold
	set -f
	printf "%s\n\t" "$fx"
	printf "extract?[y/N]"
	read ans
	[ $ans = "y" ] && aunpack $fx
}}

cmd moveto ${{
	clear; tput cup $(($(tput lines)/3)); tput bold
	set -f
	clear; echo "Move to where?"
	dest="$(sed -e 's/\s*#.*//' -e '/^$/d' -e 's/^\S*\s*//' ${XDG_CONFIG_HOME:-$HOME/.config}/shell/bm-dirs | fzf | sed 's|~|$HOME|')" &&
	for x in $fx; do
		eval mv -iv \"$x\" \"$dest\"
	done &&
	notify-send " File(s) moved." "File(s) moved to $dest."
}}

cmd copyto ${{
	clear; tput cup $(($(tput lines)/3)); tput bold
	set -f
	clear; echo "Copy to where?"
	dest="$(sed -e 's/\s*#.*//' -e '/^$/d' -e 's/^\S*\s*//' ${XDG_CONFIG_HOME:-$HOME/.config}/shell/bm-dirs | fzf | sed 's|~|$HOME|')" &&
	for x in $fx; do
		eval cp -ivr \"$x\" \"$dest\"
	done &&
	notify-send " File(s) copied." "File(s) copies to $dest."
}}

cmd share $curl -F"file=@$fx" https://0x0.st | xclip -selection c

cmd fzf_search $lf -remote "send $id select '$(fzf)'"

cmd mkdir %mkdir "$@"
cmd new_dir push :mkdir<space>

cmd encrypt $gpg -c --no-symkey-cache --cipher-algo AES256 $f
cmd decrypt $gpg $f

cmd zip $zip -j -r "$fx" "$fx"

cmd kdeconnect ${{
	clear; tput cup $(($(tput lines)/3)); tput bold
	set -f
	clear; echo "Send to which device?"
	dest="$(kdeconnect-cli -a | cut -f1 -d ':' | cut -c 3- | fzf)" &&
	for x in $fx; do
		eval kdeconnect-cli --share=\"$x\" --name=\"$dest\"
	done &&
	notify-send " Sending file(s)" "Sending file(s) to $dest."
}}

cmd dragon %dragon-drag-and-drop -a -x $fx

cmd convert ${{
	clear; tput cup $(($(tput lines)/3)); tput bold
	set -f
	clear; echo "Convert to:"
	read name
	convert $fx $name
}}

cmd run_scripts ${{
  script=$(cat package.json | jq -r '.scripts | keys[] ' | sort | fzf --height 20%) && npm run $(echo "$script")
}}

cmd setbg "$1"
cmd bulkrename $vidir

cmd open_in_new_terminal $setsid -f $TERMINAL >/dev/null 2>&1

# Bindings
map J fzf_jump
map V push :!$EDITOR<space>
map D delete
map E extract
map M moveto
map C copyto
map S share

map <c-f> fzf_search
map <c-n> new_dir
map <c-r> reload
map <c-e> encrypt
map <c-g> decrypt
map <c-k> kdeconnect
map <c-o> dragon
map <c-c> convert
map <c-s> run_scripts

map Z zip

map g top

map x $$f # execute
map X !$f

map H set hidden!

map o &mimeopen $f
map O $mimeopen --ask $f

# Renames
map r push A<c-u> # new rename
map I push A<c-a> # at the very beginning
map A rename # at the very end
map i push A<a-b><a-b><a-f> # before extention
map a push A<a-b> # after extention

map b $setbg $f
map B $xwallpaper --zoom $f # without wal

map c bulkrename

map W open_in_new_terminal

# Source Bookmarks
source "~/.config/lf/shortcutrc"
