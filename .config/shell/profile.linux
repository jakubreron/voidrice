#!/bin/zsh

bin_list=(
  "${$(find $HOME/.local/bin -type d -printf %p:)%%:}"
)

for extra in "${bin_list[@]}"; do
  PATH=$extra:$PATH
done
export PATH
unset bin_list

function __setup_settings() {
  export SUDO_ASKPASS="$HOME/.local/bin/dmenu/dmenupass"
  export _JAVA_AWT_WM_NONREPARENTING=1	# Fix for Java applications in dwm
  export QT_QPA_PLATFORMTHEME='qt5ct' # QT Theme adjustements
  +export SQLITE_HISTORY="$XDG_DATA_HOME/sqlite_history"
}

function __setup_keyboard() {
  export GTK_IM_MODULE='fcitx'
  export QT_IM_MODULE='fcitx'
  export SDL_IM_MODULE='fcitx'
  export XMODIFIERS='@im=fcitx'
}

function __setup_packages() {
  export PACKAGE_MANAGER="paru"
  export PARU_CONF="$XDG_CONFIG_HOME/paru/paru.conf"
  export AUTOGENERATE_EXCLUDED_PACKAGES="tlp|tlp-rdw|php|php-.*$|lib-.*$|amd.*$|steam"
}

function __setup_programs() {
  export TERMINAL="st"
  export BROWSER="firefox-developer-edition"
  export BACKUP_BROWSER="chromium"

  export COMPOSITOR="picom"
  export NOFIFICATION_DAEMON="dunst"
  export TORRENTS_DAEMON="transmission-daemon"
  export PASSWORD_MANAGER="keepassxc"

  export GUI_FILE_EXPLORER="nautilus"
  export CLI_FILE_EXPLORER="lfrun"
  export CLI_MAIL_CLIENT="neomutt"
  export CLI_MUSIC_PLAYER="ncmpcpp"

  export AUTOSTART_PROGRAMS="
    setbg
    $COMPOSITOR
    $NOFIFICATION_DAEMON
    unclutter
    remapd
    xsettingsd
    recheck-mail 
    redshift
    fcitx
    easyeffects --gapplication-service
    $TORRENTS_DAEMON
    $PASSWORD_MANAGER
    $TERIMNAL
    $BROWSER
  "
}

function __setup_machines() {
  # NOTE: LAYOUT_TYPE (display arrangement): primary, secondary, temporary
  # NOTE: PACKAGE_TYPE (needed for package-generation auto-commits): primary, secondary
  if [[ $(hostnamectl --static) == *'desktop'* ]]; then
    export PACKAGE_TYPE="primary"
    export LAYOUT_TYPE="primary"
  else
    export PACKAGE_TYPE="secondary"
  fi
}

# function __setup_lang() {
#   # NOTE: LANG is the default locale for all the LC_* variables (ja_JP.UTF-8 causes bugs in some CLI programs)
#   export LANG="en_US.UTF-8" 
#   # NOTE: Then the desired language can be defined separately
#   export LANGUAGE="ja_JP.UTF-8"
#   export LC_MESSAGES="$LANGUAGE"
#   export LC_TIME="$LANGUAGE"
# }

setup_functions=(
  __setup_settings
  __setup_packages
  __setup_programs
  __setup_keyboard
  __setup_machines
)

for func in "${setup_functions[@]}"; do
  "$func"
  unset -f "$func"
done
unset setup_functions

[ ! -f $XDG_CONFIG_HOME/.config/shell/shortcutrc ] && setsid shortcuts >/dev/null 2>&1
export XINITRC="$XDG_CONFIG_HOME/x11/xinitrc"
# Start graphical server on user's current tty if not already running.
[ "$(tty)" = "/dev/tty1" ] && [ -x "$(command -v "Xorg")" ] && ! pidof -s Xorg >/dev/null 2>&1 && exec startx "$XINITRC"
