#!/usr/bin/env bash

path="$PKGLIST_DIR/$PACKAGE_TYPE"

if [ -d "$path" ]; then 
  if command -v yarn >/dev/null 2>&1; then
    log-pretty-message "Generating yarn packages" "üß∂"
    yarn global list --depth=0 | awk '/info/{print $2}' | sed -e 's/\"//g' > "$path/yarn.txt"
  else
    log-pretty-message "Skipping yarn packages (yarn not installed)" "‚ö†"
  fi

  if command -v npm >/dev/null 2>&1; then
    log-pretty-message "Generating npm packages" "üì¶"
    npm -g ls --parseable | tail -n +2 | sed 's/.*node_modules\///' > "$path/npm.txt"
  else
    log-pretty-message "Skipping npm packages (npm not installed)" "‚ö†"
  fi

  generate_linux_pkgs() {
    if command -v paru >/dev/null 2>&1; then
      manager=paru
    elif command -v yay >/dev/null 2>&1; then
      manager=yay
    else
      manager=pacman
    fi

    log-pretty-message "Generating $manager packages" "üì¶"
    $manager -Qqe > "$path/pacman.txt";
    $manager -Qqe | grep 'php' | sed -r "s/\b('phpstorm|phpstorm-jre')//g" > "$path/php.txt"
  }

  generate_macos_pkgs() {
    if command -v brew >/dev/null 2>&1; then
      log-pretty-message "Generating brew packages" "üç∫"

      brew bundle dump "$path/Brewfile"
    fi
  }

  case "$(uname -s)" in
    Linux*)
      generate_linux_pkgs
      ;;
    Darwin)
      generate_macos_pkgs
      ;;
  esac

  if [ -d "$PKGLIST_DIR/.git" ] && [ -d "$HOME/.ssh" ]; then
    git -C "$PKGLIST_DIR" add .
    git -C "$PKGLIST_DIR" commit -m "docs($PACKAGE_TYPE): auto-commit-changes"
    git -C "$PKGLIST_DIR" push
  fi
fi
