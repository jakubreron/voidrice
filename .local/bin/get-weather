#!/usr/bin/env bash

url="${WTTRURL:-wttr.in/Katowice}"
weatherreport="${XDG_CACHE_HOME:-$HOME/.cache}/weatherreport"

mode="$1"

getforecast() { timeout --signal=1 2s curl -sf "$url/$LOCATION" > "$weatherreport" || exit 1; }

checkforecast() {
	[ -s "$weatherreport" ] && [ "$(stat -c %y "$weatherreport" 2>/dev/null |
		cut -d' ' -f1)" = "$(date '+%Y-%m-%d')" ]
}

getprecipchance() {
	echo "$weatherdata" | sed '16q;d' |    # Extract line 16 from file
		grep -wo "[0-9]*%" |           # Find a sequence of digits followed by '%'
		sort -rn |                     # Sort in descending order
		head -1q                       # Extract first line
}

getdailyhighlow() {
	echo "$weatherdata" | sed '13q;d' |      # Extract line 13 from file
		grep -o "m\\([-+]\\)*[0-9]\\+" | # Find temperatures in the format "m<signed number>"
		sed 's/[+m]//g' |                # Remove '+' and 'm'
		sort -g                        # Sort in ascending order
}

gethigh() {
  getdailyhighlow | sed -n '4p' # Get high temperature from the fourth line
}

getlow() {
  getdailyhighlow | sed -n '1p' # Get low temperature from the first line
}

readfile() { weatherdata="$(cat "$weatherreport")" ;}

checkforecast || getforecast
readfile

if [[ $mode = 'precip' ]]; then
  getprecipchance
elif [[ $mode = 'high' ]]; then
  echo "$(gethigh)Â°"
elif [[ $mode = 'low' ]]; then
  echo "$(getlow)Â°"
else
  printf "â˜”%s ðŸ¥¶%sÂ° ðŸŒž%sÂ°\n" "$(getprecipchance)" "$(getlow)" "$(gethigh)"
fi
