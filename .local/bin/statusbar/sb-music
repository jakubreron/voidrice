#!/bin/sh

play_icon="ðŸŸ¢"
pause_icon="ðŸ”´"
random_icon="ðŸ”€"

filter() {
	name=$(mpc status -f %title% | head -n 1) # get first line only

	trim() {
		cut_characters_count="40"
		cut_indicator="ðŸ”¸"

		if [[ ${#1} -gt $cut_characters_count ]]; then
			echo "$1" | cut "-c1-$cut_characters_count" | sed "s/$/$cut_indicator/g" 
		else
			echo "$1"
		fi
	}

	# check based on the overall status (not first line only as in $name)
	[[ $(mpc) == *"random: on"* ]] && name="$random_icon$name"

	if [[ $(mpc) == *"paused"* ]]; then
		name="$pause_icon$name"
	else
		name="$play_icon$name"
	fi

	trim "$name" # trim based on first line
}

pidof -x sb-mpdup >/dev/null 2>&1 || sb-mpdup >/dev/null 2>&1 &

case $BLOCK_BUTTON in
	1) mpc status | filter ; setsid -f "$TERMINAL" -e "$CLI_MUSIC_PLAYER" ;;  # right click, pause/unpause
	2) mpc toggle | filter ;;  # right click, pause/unpause
	3) mpc status | filter ; notify-send "ðŸŽµ Music module" "\- Shows mpd song playing.
- $pause_icon when paused.
- $play_icon when playing.
- $random_icon when playing random songs.
- Left click opens $CLI_MUSIC_PLAYER.
- Middle click pauses.
- Scroll changes track.";;  # right click, pause/unpause
	4) mpc prev   | filter ;;  # scroll up, previous
	5) mpc next   | filter ;;  # scroll down, next
	6) mpc status | filter ; "$TERMINAL" -e "$EDITOR" "$0" ;;
	*) mpc status | filter ;;
esac
